{"version":3,"file":"js/333.5437d5a3.js","mappings":"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","sources":["webpack://giligili/./src/views/UserMe.vue","webpack://giligili/src/views/UserMe.vue","webpack://giligili/./src/views/UserMe.vue?0bb5","webpack://giligili/./src/views/UserMe.vue?42d7","webpack://giligili/./src/api/user.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-form',{ref:\"form\",staticStyle:{\"margin-top\":\"30px\"},attrs:{\"model\":_vm.user,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"头像\"}},[_c('el-upload',{ref:\"avatar\",attrs:{\"action\":\"\",\"http-request\":_vm.uploadAvatar,\"before-upload\":_vm.beforeUploadAvatar,\"on-exceed\":_vm.onExceed,\"limit\":1,\"accept\":\".jpg,.jpeg,.png\"}},[_c('el-avatar',{attrs:{\"src\":_vm.user.avatar}},[_c('el-avatar',{attrs:{\"icon\":\"el-icon-user-solid\"}})],1)],1)],1),_c('el-form-item',{attrs:{\"label\":\"用户ID\"}},[_c('el-input',{staticClass:\"inpWid\",attrs:{\"readonly\":\"\"},model:{value:(_vm.user.id),callback:function ($$v) {_vm.$set(_vm.user, \"id\", $$v)},expression:\"user.id\"}})],1),_c('el-form-item',{attrs:{\"label\":\"注册日期\"}},[_c('el-input',{staticClass:\"inpWid\",attrs:{\"readonly\":\"\"},model:{value:(_vm.user.created_at),callback:function ($$v) {_vm.$set(_vm.user, \"created_at\", $$v)},expression:\"user.created_at\"}})],1),_c('el-form-item',{attrs:{\"label\":\"昵称\"}},[_c('el-input',{staticClass:\"inpWid\",attrs:{\"readonly\":\"\"},model:{value:(_vm.user.nickname),callback:function ($$v) {_vm.$set(_vm.user, \"nickname\", $$v)},expression:\"user.nickname\"}}),_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.updateNickname}},[_vm._v(\"修改\")])],1),_c('el-form-item',{attrs:{\"label\":\"签名\"}},[_c('el-input',{staticClass:\"inpWid\",attrs:{\"readonly\":\"\"},model:{value:(_vm.user.signature),callback:function ($$v) {_vm.$set(_vm.user, \"signature\", $$v)},expression:\"user.signature\"}}),_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.updateSignature}},[_vm._v(\"修改\")])],1),_c('el-form-item',{attrs:{\"label\":\"IP属地\"}},[_c('el-input',{staticClass:\"inpWid\",attrs:{\"readonly\":\"\"},model:{value:(_vm.user.ip_location),callback:function ($$v) {_vm.$set(_vm.user, \"ip_location\", $$v)},expression:\"user.ip_location\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.updatePassword}},[_vm._v(\"修改密码\")]),_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":_vm.logout}},[_vm._v(\"登出\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <el-form ref=\"form\" :model=\"user\" label-width=\"80px\" style=\"margin-top: 30px;\">\n        <el-form-item label=\"头像\">\n            <el-upload action=\"\" :http-request=\"uploadAvatar\" :before-upload=\"beforeUploadAvatar\" :on-exceed=\"onExceed\"\n                :limit=\"1\" accept=\".jpg,.jpeg,.png\" ref=\"avatar\">\n                <el-avatar :src=user.avatar>\n                    <el-avatar icon=\"el-icon-user-solid\"></el-avatar>\n                </el-avatar>\n            </el-upload>\n        </el-form-item>\n        <el-form-item label=\"用户ID\">\n            <el-input v-model=\"user.id\" readonly class=\"inpWid\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"注册日期\">\n            <el-input v-model=\"user.created_at\" readonly class=\"inpWid\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"昵称\">\n            <el-input v-model=\"user.nickname\" readonly class=\"inpWid\"></el-input>\n            <el-button type=\"success\" @click=\"updateNickname\">修改</el-button>\n        </el-form-item>\n        <el-form-item label=\"签名\">\n            <el-input v-model=\"user.signature\" readonly class=\"inpWid\"></el-input>\n            <el-button type=\"success\" @click=\"updateSignature\">修改</el-button>\n        </el-form-item>\n        <el-form-item label=\"IP属地\">\n            <el-input v-model=\"user.ip_location\" readonly class=\"inpWid\"></el-input>\n        </el-form-item>\n        <el-form-item>\n            <el-button type=\"success\" @click=\"updatePassword\">修改密码</el-button>\n            <el-button type=\"danger\" @click=\"logout\">登出</el-button>\n        </el-form-item>\n    </el-form>\n</template>\n\n<script>\nimport * as API from '@/api/user';\nimport * as Common from '@/common';\n\nexport default {\n    data() {\n        return {\n            user: {},\n        }\n    },\n    methods: {\n        load() {\n            API.me().then((res) => {\n                if (res.code === 0) {\n                    this.user = res.data\n                    this.user.created_at = new Date(this.user.created_at * 1000).toLocaleString()\n                } else {\n                    this.$notify.error({\n                        title: \"获取用户信息失败\",\n                        message: res.msg,\n                        showClose: false\n                    });\n                }\n            }).catch((error) => {\n                this.$notify.error({\n                    title: '获取用户信息失败',\n                    message: error,\n                    showClose: false\n                });\n            });\n        },\n        logout() {\n            Common.clearAllTokenAndToLoginPage()\n            this.$notify({\n                title: '登出成功',\n                type: 'success',\n                showClose: false\n            });\n        },\n        updateNickname() {\n            this.$prompt('请输入新昵称', '修改昵称', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            }).then(({ value }) => {\n                if (value.length < 2 || value.length > 30) {\n                    this.$message.error('昵称的长度需在 2 到 30 个字符之间');\n                } else if (value === this.user.nickname) {\n                    this.$message.error('新昵称与原昵称相同');\n                } else {\n                    API.updateNickname({ \"new_nickname\": value }).then((res) => {\n                        if (res.code === 0) {\n                            this.user.nickname = res.data.nickname\n                            this.$message({\n                                type: 'success',\n                                message: '修改成功'\n                            });\n                        } else {\n                            this.$message.error(res.msg);\n                        }\n                    }).catch((error) => {\n                        this.$message.error(error);\n                    });\n                }\n            }).catch(() => {\n                return\n            })\n        },\n        updateSignature() {\n            this.$prompt('请输入新签名', '修改签名', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            }).then(({ value }) => {\n                if (value.length > 50) {\n                    this.$message.error('签名的长度需小于 50 个字符');\n                } else if (value === this.user.signature) {\n                    this.$message.error('新签名与原签名相同');\n                } else {\n                    API.updateSignature({ \"new_signature\": value }).then((res) => {\n                        if (res.code === 0) {\n                            this.user.signature = res.data.signature\n                            this.$message({\n                                type: 'success',\n                                message: '修改成功'\n                            });\n                        } else {\n                            this.$message.error(res.msg);\n                        }\n                    }).catch((error) => {\n                        this.$message.error(error);\n                    });\n                }\n            }).catch(() => {\n                return\n            })\n        },\n        updatePassword() {\n            const h = this.$createElement;\n            this.$msgbox({\n                title: '修改密码',\n                message: h('div', null, [\n                    h('span', null, '请输入新密码'),\n                    h('h1'),\n                    h('input', {\n                        attrs: {\n                            class: 'el-input__inner',\n                            id: 'password',\n                            type: 'password',\n                        },\n                    }),\n                    h('h1'),\n                    h('span', null, '请输入新确认密码'),\n                    h('h1'),\n                    h('input', {\n                        attrs: {\n                            class: 'el-input__inner',\n                            id: 'password_confirm',\n                            type: 'password',\n                        },\n                    }),\n                ]),\n                showCancelButton: true,\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                beforeClose: (action, instance, done) => {\n                    if (action !== 'confirm') {\n                        document.getElementById('password').value = \"\"\n                        document.getElementById('password_confirm').value = \"\"\n                    }\n                    done();\n                },\n            }).then(() => {\n                let pw = document.getElementById('password')\n                let pwc = document.getElementById('password_confirm')\n                if (pw.value.length < 8 || pw.value.length > 40 || pwc.value.length < 8 || pwc.value.length > 40) {\n                    this.$message.error('密码的长度需在 8 到 40 个字符之间');\n                } else if (pw.value !== pwc.value) {\n                    this.$message.error('两次密码输入不一致');\n                } else {\n                    API.updatePassword({ 'new_password': pw.value, 'new_password_confirm': pwc.value }).then((res) => {\n                        if (res.code === 0) {\n                            this.$message({\n                                type: 'success',\n                                message: '修改成功'\n                            });\n                        } else {\n                            this.$message.error(res.msg);\n                        }\n                    }).catch((error) => {\n                        this.$message.error(error);\n                    });\n                }\n                pw.value = \"\"\n                pwc.value = \"\"\n            }).catch(() => {\n                return\n            })\n        },\n        onExceed() {\n            this.$message.warning(\"文件只能为1个\")\n        },\n        uploadAvatar(option) {\n            let form = new FormData()\n            form.append(\"avatar\", option.file)\n\n            API.uploadAvatar(form).then((res) => {\n                if (res.code === 0) {\n                    this.user.avatar = res.data.avatar\n                    this.$message({\n                        type: 'success',\n                        message: '上传成功'\n                    });\n                } else {\n                    this.$message.error(res.msg);\n                }\n            }).catch((error) => {\n                this.$message.error(error);\n            });\n\n            this.$refs['avatar'].clearFiles()\n        },\n        beforeUploadAvatar(file) {\n            if (file.size / 1024 / 1024 > 2) {\n                this.$message.error('头像大小不能超过2MB');\n                return false\n            }\n            return true\n        },\n    },\n    beforeMount() {\n        this.load()\n    },\n}\n</script>\n\n<style>\n.inpWid {\n    width: 80%;\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserMe.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserMe.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserMe.vue?vue&type=template&id=446bd4b2&\"\nimport script from \"./UserMe.vue?vue&type=script&lang=js&\"\nexport * from \"./UserMe.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UserMe.vue?vue&type=style&index=0&id=446bd4b2&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import axios from 'axios';\n\n// 用户注册\nconst register = form => axios.post('/api/v1/register', form).then(res => res.data);\n\n// 用户登陆\nconst login = form => axios.post('/api/v1/login', form).then(res => res.data);\n\n//我\nconst me = () => axios.get(`/api/v1/me`).then(res => res.data);\n\n// 用户详情\nconst getUser = id => axios.get(`/api/v1/user/${id}`).then(res => res.data);\n\n// 修改昵称\nconst updateNickname = form => axios.put(`/api/v1/user/nickname`, form).then(res => res.data);\n\n// 修改签名\nconst updateSignature = form => axios.put(`/api/v1/user/signature`, form).then(res => res.data);\n\n// 修改密码\nconst updatePassword = form => axios.put(`/api/v1/user/password`, form).then(res => res.data);\n\n// 上传头像\nconst uploadAvatar = form => axios.post('/api/v1/user/avatar', form).then(res => res.data);\n\nexport {\n    register,\n    login,\n    me,\n    getUser,\n    updateNickname,\n    updateSignature,\n    updatePassword,\n    uploadAvatar,\n};"],"names":["render","_vm","this","_c","_self","ref","staticStyle","attrs","user","uploadAvatar","beforeUploadAvatar","onExceed","avatar","staticClass","model","value","id","callback","$$v","$set","expression","created_at","nickname","on","updateNickname","_v","signature","updateSignature","ip_location","updatePassword","logout","staticRenderFns","data","methods","load","API","title","message","showClose","Common","type","confirmButtonText","cancelButtonText","h","class","showCancelButton","beforeClose","document","done","pw","pwc","form","beforeMount","component","register","axios","then","res","login","me","getUser"],"sourceRoot":""}