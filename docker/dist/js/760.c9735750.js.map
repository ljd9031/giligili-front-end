{"version":3,"file":"js/760.c9735750.js","mappings":"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","sources":["webpack://giligili/./src/views/UserLogin.vue","webpack://giligili/src/views/UserLogin.vue","webpack://giligili/./src/views/UserLogin.vue?96df","webpack://giligili/./src/views/UserLogin.vue?d456","webpack://giligili/./src/api/user.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('h1',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"登陆\")]),_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"label-width\":\"80px\",\"status-icon\":\"\",\"rules\":_vm.rules,\"hide-required-asterisk\":\"\"}},[_c('el-form-item',{attrs:{\"label\":\"用户名\",\"prop\":\"username\"}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.form.username),callback:function ($$v) {_vm.$set(_vm.form, \"username\", $$v)},expression:\"form.username\"}})],1),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"password\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"autocomplete\":\"off\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.login.apply(null, arguments)}},model:{value:(_vm.form.password),callback:function ($$v) {_vm.$set(_vm.form, \"password\", $$v)},expression:\"form.password\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"id\":\"button\",\"type\":\"primary\"},on:{\"click\":_vm.login}},[_vm._v(\"登陆\")]),_c('el-button',{on:{\"click\":_vm.toRegisterPage}},[_vm._v(\"去注册\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <h1 style=\"text-align:center\">登陆</h1>\n        <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" status-icon :rules=\"rules\" hide-required-asterisk>\n            <el-form-item label=\"用户名\" prop=\"username\">\n                <el-input v-model=\"form.username\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"密码\" prop=\"password\">\n                <el-input type=\"password\" v-model=\"form.password\" autocomplete=\"off\" @keyup.enter.native=\"login\">\n                </el-input>\n            </el-form-item>\n            <el-form-item>\n                <el-button id=\"button\" type=\"primary\" @click=\"login\">登陆</el-button>\n                <el-button @click=\"toRegisterPage\">去注册</el-button>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n  \n<script>\nimport * as Common from '@/common'\nimport * as API from '@/api/user'\n\nexport default {\n    data() {\n        return {\n            form: {\n                username: '',\n                password: '',\n            },\n            rules: {\n                username: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    { min: 5, max: 30, message: '长度在 5 到 30 个字符', trigger: 'blur' }\n                ],\n                password: [\n                    { required: true, message: '请输入密码', trigger: 'blur' },\n                    { min: 8, max: 40, message: '长度在 8 到 40 个字符', trigger: 'blur' }\n                ],\n            }\n        }\n    },\n    methods: {\n        login() {\n            let button = document.getElementById(\"button\")\n            if (button.disabled === true) {\n                return\n            }\n            this.$refs['form'].validate((valid) => {\n                if (!valid) {\n                    this.$notify.error({\n                        title: '登陆失败',\n                        message: '填入信息有误',\n                        showClose: false\n                    });\n                } else {\n                    button.disabled = true\n                    let preInner = button.innerHTML\n                    button.innerHTML = \"登陆中...\"\n                    API.login(this.form).then((res) => {\n                        if (res.code === 0) {\n                            let ip_location = res.data.ip_location\n                            let msg = `上次登陆IP属地：${ip_location}`\n                            if (ip_location === '') {\n                                msg = \"这是您账户的第一次登陆\"\n                            }\n                            localStorage.setItem(\"token\", res.data.token);\n                            localStorage.setItem(\"refresh_token\", res.data.refresh_token);\n                            localStorage.setItem(\"uid\", res.data.id)\n                            this.$notify({\n                                title: '登陆成功',\n                                message: msg,\n                                type: 'success',\n                                showClose: false\n                            });\n                            this.$router.push('/')\n                        } else {\n                            this.$notify.error({\n                                title: '登陆失败',\n                                message: res.msg,\n                                showClose: false\n                            });\n                            button.disabled = false\n                            button.innerHTML = preInner\n                        }\n                    }).catch((error) => {\n                        this.$notify.error({\n                            title: '登陆失败',\n                            message: error,\n                            showClose: false\n                        });\n                        button.disabled = false\n                        button.innerHTML = preInner\n                    });\n                }\n            });\n        },\n        toRegisterPage() {\n            this.$router.push('/register')\n        },\n    },\n    beforeMount() {\n        if (Common.checkToken()) {\n            this.$router.push('/me')\n            this.$notify.error({\n                title: \"拒绝访问\",\n                message: \"你已登录\",\n                showClose: false\n            })\n        }\n    }\n}\n</script>\n  ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserLogin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserLogin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserLogin.vue?vue&type=template&id=1f046100&\"\nimport script from \"./UserLogin.vue?vue&type=script&lang=js&\"\nexport * from \"./UserLogin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import axios from 'axios';\n\n// 用户注册\nconst register = form => axios.post('/api/v1/register', form).then(res => res.data);\n\n// 用户登陆\nconst login = form => axios.post('/api/v1/login', form).then(res => res.data);\n\n//我\nconst me = () => axios.get(`/api/v1/me`).then(res => res.data);\n\n// 用户详情\nconst getUser = id => axios.get(`/api/v1/user/${id}`).then(res => res.data);\n\n// 修改昵称\nconst updateNickname = form => axios.put(`/api/v1/user/nickname`, form).then(res => res.data);\n\n// 修改签名\nconst updateSignature = form => axios.put(`/api/v1/user/signature`, form).then(res => res.data);\n\n// 修改密码\nconst updatePassword = form => axios.put(`/api/v1/user/password`, form).then(res => res.data);\n\n// 上传头像\nconst uploadAvatar = form => axios.post('/api/v1/user/avatar', form).then(res => res.data);\n\nexport {\n    register,\n    login,\n    me,\n    getUser,\n    updateNickname,\n    updateSignature,\n    updatePassword,\n    uploadAvatar,\n};"],"names":["render","_vm","this","_c","_self","staticStyle","_v","ref","attrs","form","rules","model","value","username","callback","$$v","$set","expression","nativeOn","$event","type","indexOf","_k","keyCode","key","login","apply","arguments","password","on","toRegisterPage","staticRenderFns","data","required","message","trigger","min","max","methods","button","API","msg","localStorage","title","showClose","beforeMount","component","register","axios","then","res","me","getUser","id","updateNickname","updateSignature","updatePassword","uploadAvatar"],"sourceRoot":""}